version: '2.2'
services:

  postgres:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=andrea1
      - POSTGRES_DB=race_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow-net
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    image: apache/airflow:2.8.1-python3.9
    environment:
      - _PIP_ADDITIONAL_REQUIREMENTS=-r /requirements.txt
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:andrea1@postgres:5432/race_db
      - AIRFLOW__WEBSERVER__SECRET_KEY=bdb918ce110e55475ad0a3e2d6d690f12e7e638a7e287394
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data  
      - airflow_logs:/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./requirements.txt:/requirements.txt
    networks:
      - airflow-net
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "airflow db init && 
           psql -U postgres -c 'DROP DATABASE IF EXISTS race_db;' && 
           psql -U postgres -c 'CREATE DATABASE race_db;' && 
           /opt/airflow/scripts/init_db.sh && 
           airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"

  airflow-scheduler:
    image: apache/airflow:2.8.1-python3.9
    restart: always
    environment:
      - _PIP_ADDITIONAL_REQUIREMENTS=-r /requirements.txt
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:andrea1@postgres:5432/race_db
      - AIRFLOW__WEBSERVER__WORKERS=4
      - AIRFLOW__WEBSERVER__SECRET_KEY=bdb918ce110e55475ad0a3e2d6d690f12e7e638a7e287394
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8082
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data  
      - airflow_logs:/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./requirements.txt:/requirements.txt
    networks:
      - airflow-net
    depends_on:
      - airflow-init
      - kafka-broker-1
      - postgres
    command: >
      bash -c "airflow scheduler"

  airflow-webserver:
    image: apache/airflow:2.8.1-python3.9
    restart: always
    ports:
      - "8082:8080"
    environment:
      - _PIP_ADDITIONAL_REQUIREMENTS=-r /requirements.txt
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:andrea1@postgres:5432/race_db
      - AIRFLOW__WEBSERVER__SECRET_KEY=bdb918ce110e55475ad0a3e2d6d690f12e7e638a7e287394
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8082
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data  
      - airflow_logs:/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./requirements.txt:/requirements.txt
    networks:
      - airflow-net
    depends_on:
      - airflow-init
      - kafka-broker-1
      - postgres
    command: >
      bash -c "airflow webserver"

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - airflow-net

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      SCHEMA_REGISTRY_DEBUG: 'true'
    networks:
      - airflow-net

  kafka-broker-1:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka-broker
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - airflow-net

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80" 
    networks:
      - airflow-net
    depends_on:
      - postgres

volumes:
  airflow_logs:
  postgres_data:
    driver: local
    
networks:
  airflow-net:
    driver: bridge